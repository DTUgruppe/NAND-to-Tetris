// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    DMux8Way(in=load, sel=address[0..2], a=a2, b=b2, c=c2, d=d2, e=e2, f=f2, g=g2, h=h2);

    Register(in=in[0..15], load=a2, out=a);
    Register(in=in[0..15], load=b2, out=b);
    Register(in=in[0..15], load=c2, out=c);
    Register(in=in[0..15], load=d2, out=d);
    Register(in=in[0..15], load=e2, out=e);
    Register(in=in[0..15], load=f2, out=f);
    Register(in=in[0..15], load=g2, out=g);
    Register(in=in[0..15], load=h2, out=h);

    Mux8Way16(a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h, sel=address[0..2], out=out[0..15]);
}